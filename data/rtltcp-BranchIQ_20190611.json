{"title":"修改 RTL-SDR 驱动使 rtl_tcp 支持从 I/Q 通道直采信号","created_at":1560229806000,"updated_at":1708070849863,"content":"## 起因\n\n博主最近申请到了 WebSDR 的服务端程序，在准备好各种环境之后，却卡在了与 RTL-SDR 的对接上......\n\nWebSDR 的后端一般与 RTL-SDR 驱动自带的 TCP 服务器模块 `rtl_tcp` 对接并进行调谐。`rtl_tcp` 的启动很简单，只需要一行命令即可解决。\n\n```\nroot@yukiho:~# rtl_tcp -a 127.0.0.1 -s 1024000 -g 0 -d 0 -p 1234\n```\n\n在设置好中心频率（9500 kHz），采样率（1.2 Msps）并启动该模块之后，博主却发现 WebSDR 并不能正常地接收短波信号，频谱瀑布一片空白。\n\n这就很迷了。经过一波分析之后，博主得出了结论：\n\n> `rtl_tcp` 命令不能像 `rtl_sdr` 命令一样使用 I/Q 通道直采接收中短波信号，而此前 OpenWebRX 能实现是因为 Op 采用的是支持 I/Q 通道直采的 `rtl_sdr` 模块加 netcat 转发数据至 TCP 实现的......\n\n转发数据确实是一条新的思路，但是操作起来却有些麻烦：\n\n```\nroot@yukiho:~# rtl_sdr -D2 -s 1024000 -f 9500000 -p 0 -g 0 -| nmux --bufsize 253952 --bufcnt 379 --port 1234 --address 127.0.0.1\n```\n\n此外，由于引入了新的工具 netcat 做数据转发，所以负载也跟着上去了，对于博主的垃圾 Orange Pi Lite 来说简直就是灭顶之灾......\n\n还有更好的方法吗？\n\n\n\n事实上还是有的，通过修改 RTL-SDR 的源码就可以实现 rtl_tcp 支持从 I/Q 通道直采信号。一位国外 HAM SP5TOF 针对 rtl_tcp 模块做了修改，原文是 [Direct Sampling Mode in 820T2 DVB-T on Linux os - SP5TOF - amateur radio station](http://inteligentny-dom.vxm.pl/sp5tof/?page_id=404)。\n\n经过整理后，博主将修改后的 RTL-SDR 驱动上传到了 GitHub......\n\n## 食用方法\n\n事实上，要对 RTL-SDR 进行一次重新编译。\n\n```\nroot@yukiho:/home# git clone https://github.com/bclswl0827/rtl-sdr.git\nroot@yukiho:/home# cd rtl-sdr\nroot@yukiho:/home/rtl-sdr# mkdir build\nroot@yukiho:/home/rtl-sdr/build# cd build\nroot@yukiho:/home/rtl-sdr/build# cmake ../ -DINSTALL_UDEV_RULES\nroot@yukiho:/home/rtl-sdr/build# make\nroot@yukiho:/home/rtl-sdr/build# make install\nroot@yukiho:/home/rtl-sdr/build# ldconfig\nroot@yukiho:/home/rtl-sdr/build# bash -c 'echo -e \"\\n# for RTL-SDR:\\nblacklist dvb_usb_rtl28xxu\\n\" >> /etc/modprobe.d/blacklist.conf'\nroot@yukiho:/home/rtl-sdr/build# update-initramfs -u\nroot@yukiho:/home/rtl-sdr/build# rmmod dvb_usb_rtl28xxu\nroot@yukiho:/home/rtl-sdr/build# reboot\n```\n\n重启系统。\n\n现在，`rtl_tcp` 就可以直接采集来自 I/Q 通道的中短波信号惹～\n\n```\nroot@yukiho:~# rtl_tcp rtl_tcp -a 127.0.0.1 -s 1024000 -g 0 -d 0 -p 1234 -i 2\n```\n\n其中，`-i 2` 意为使用 Q 通道，TCP 端口为 `:1234`，在 `localhost` 下监听。\n\n将配置写入 WebSDR 的配置文件 websdr.cfg，然后运行 WebSDR。\n\n```\n...内容保持不变...\nband 31 M\ndevice !rtlsdr 127.0.0.1:1234 0\nsamplerate 1024000\nallowwide\ncenterfreq 9500\ninitial 9750 am\nantenna 20 Metres Wire\ngain 0\n...内容保持不变...\n```\n\n频谱瀑布正常显示，即正常运行，完结撒花。","words":2245}